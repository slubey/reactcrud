{"version":3,"sources":["Navbar.js","Components/DogPost.js","Components/DogPut.js","Components/Vote.js","Components/DogListClassComponent.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","activeClassName","to","DogPost","handleSubmit","e","preventDefault","state","Breed","length","ImageUri","obj","axios","post","then","res","console","log","data","setState","handleChange","bind","event","target","name","value","this","action","method","onSubmit","noValidate","type","onChange","required","Component","DogPut","props","match","params","id","Id","parseInt","put","get","breed","imageUri","catch","error","Vote","useState","commitHistory","setCommitHistory","useEffect","response","Table","striped","bordered","hover","map","c","index","Image","src","DogListClassComponent","handleDelete","delete","getList","dogs","dog","key","onClick","window","confirm","renderTableData","Routes","path","component","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a2dd38b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './styles/navbar.css';\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar\">\r\n    <NavLink\r\n      exact\r\n      activeClassName=\"navbar__link--active\"\r\n      className=\"navbar__link\"\r\n      to=\"/\"\r\n    >\r\n      Items\r\n    </NavLink>\r\n    <NavLink\r\n      activeClassName=\"navbar__link--active\"\r\n      className=\"navbar__link\"\r\n      to=\"/doglist\"\r\n    >\r\n      List\r\n    </NavLink>\r\n    <NavLink\r\n      activeClassName=\"navbar__link--active\"\r\n      className=\"navbar__link\"\r\n      to=\"/dogpost\"\r\n    >\r\n      Create\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n// import '../style.css';\r\nexport class DogPost extends Component {\r\n    constructor() {\r\n        super()\r\n    \r\n        this.state = {\r\n            Breed: '',\r\n            ImageUri: ' '\r\n        }\r\n    \r\n       // this.handleBlur = this.handleBlur.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        // this.componentDidMount = this.componentDidMount.bind(this)\r\n      }\r\n    //   componentDidMount() {\r\n    //      // console.log(\"componentDidMount  \" + this.state.Breed);\r\n    //      this.setState({\r\n    //         Breed: \"value\",\r\n    //         ImageUri: \"ImageUri\"\r\n    //     });\r\n    //     // console.log(\"componentDidMount  \" + this.state.Breed);\r\n    //   }\r\n    // static defaultProps = {\r\n    //     value: ''\r\n    // };\r\n\r\n    // state = {\r\n    //     value: this.props.value\r\n    // };\r\n    // handleChange = event => {\r\n    //     this.setState({ value: event.target.value });\r\n    //     console.log(\"handleChange  \" + this.state.value);\r\n    //     // + this.prevstate.value\r\n    // }\r\n    // handleBlur = event => {\r\n    //     this.setState({ value: event.target.value });\r\n    //     console.log(\"handleBlur  \" + this.state.value);\r\n    //     // + this.prevstate.value\r\n    // }\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // handleBlur(event) {\r\n    //     const { name, value } = event.target\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     })\r\n    // }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('current state:  ' + this.state.Breed + \"  \" + this.state.ImageUri);\r\n        if(this.state.Breed.length === 0 || this.state.ImageUri.length === 0)\r\n        // TODO SL add validation message\r\n        return;\r\n\r\n        // console.log('submitting form. ');\r\n        // e.preventDefault();\r\n        const obj = {\r\n            Breed: this.state.Breed,\r\n            ImageUri: this.state.ImageUri\r\n        };\r\n\r\n        // console.log('submitting obj. ' + obj);\r\n        axios.post('https://localhost:44382/api/dogsapi/', obj)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            Breed: '',\r\n            ImageUri: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Create New Item</h2>\r\n                <form action=\"/myform\" method=\"post\" onSubmit={this.handleSubmit } noValidate>\r\n                    {\r\n                        <div>\r\n                            <p>\r\n                                Breed: <br />\r\n                                <input type=\"text\" onChange={this.handleChange} \r\n                                value={this.state.Breed} name=\"Breed\" required />\r\n                            </p>\r\n                            <p>\r\n                                Image Uri: <br />\r\n                                <input value={this.state.ImageUri} onChange={this.handleChange}  type=\"text\" name=\"ImageUri\"  required />\r\n                            </p>\r\n                        </div>\r\n                        /*<p>Textarea: <br />\r\n                            <textarea id={this.props.id}\r\n                                name={this.props.name}\r\n                                defaultValue={this.state.value}\r\n                                onChange={this.handleChange} />\r\n                        </p>\r\n                        <p>Checkbox: <br />\r\n                            <input type=\"checkbox\" name=\"category\" value=\"category1\" /> Cat1\r\n                            <input type=\"checkbox\" name=\"category\" value=\"category2\" /> Cat2\r\n                            <input type=\"checkbox\" name=\"category\" value=\"category3\" /> Cat3\r\n                            </p>\r\n                        <p>Radio: <br />\r\n                            <input type=\"radio\" name=\"location\" value=\"location1\" /> Loc1\r\n                            <input type=\"radio\" name=\"location\" value=\"location2\" /> Loc2\r\n                            <input type=\"radio\" name=\"location\" value=\"location3\" /> Loc3\r\n                            </p>\r\n                        <p>Select: <br />\r\n                            <select name=\"product\" defaultValue={2}>\r\n                                <option value=\"1\">Option 1</option>\r\n                                <option value=\"2\">Option 2</option>\r\n                                <option value=\"3\">Option 3</option>\r\n                            </select>\r\n                        </p> */\r\n                    }\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default DogPost;\r\n\r\n// function DogPost() {\r\n\r\n//     useEffect(() => {\r\n//         axios.post('https://localhost:44382/api/dogsapi/',\r\n//             {\r\n//                 Breed: \"breed1\",\r\n//                 ImageUri: \"ImageUri\"\r\n\r\n//             })\r\n//     });\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1> Vote Post </h1>\r\n\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default DogPost;\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import '../style.css';\r\n\r\n// class FormSampleComponent extends Component {\r\n//   constructor() {\r\n//     super()\r\n\r\n//     this.state = {\r\n//       firstName: \"\"\r\n//     }\r\n\r\n//     this.handleChange = this.handleChange.bind(this)\r\n//   }\r\n\r\n//   handleChange(event) {\r\n//     const {name,value} = event.target\r\n//     this.setState({\r\n//       [name]: value\r\n//     })\r\n//   }\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <form>\r\n//         <input type=\"text\" value={this.state.firstName}   name=\"firstName\" placeholder=\"First Name\" onChange={this.handleChange} />\r\n//         <input type=\"text\" value={this.state.lastName} name=\"lastName\" placeholder=\"Last Name\" onChange={this.handleChange} />\r\n//         <h1>{this.state.firstName} {this.state.lastName}</h1>\r\n//       </form>\r\n//     )\r\n//   }\r\n\r\n// }\r\n// export default FormSampleComponent;\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n// import '../style.css';\r\nexport class DogPut extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Id: props.match.params.id,\r\n            Breed: ' ',\r\n            ImageUri: ' '\r\n\r\n        }\r\n        // constructor() {\r\n        //     super()\r\n\r\n        //     this.state = {\r\n        //         Breed: \"123\",\r\n        //         ImageUri: \"567\"\r\n        //     }\r\n\r\n        // this.handleBlur = this.handleBlur.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        // this.componentDidMount = this.componentDidMount.bind(this)\r\n    }\r\n     componentDidMount() {\r\n        // this.getData();\r\n        console.log(\"componentDidMount  \" + this.state.Breed + \" \" + this.state.ImageUri + \" id \" + this.props.match.params.id);\r\n        axios.get('https://localhost:44382/api/dogsapi/' + this.props.match.params.id)\r\n           // .then(res => { console.log(\"ge222t\"); })\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    Breed: res.data.breed,\r\n                    ImageUri: res.data.imageUri\r\n                });\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n        // this.setState({\r\n        //     Breed: \"value2\",\r\n        //     ImageUri: \"ImageUri3\"\r\n        // });\r\n        console.log(\"componentDidMount  22  \" + this.state.Breed + \" \" + this.state.ImageUri);\r\n    }\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('id :' + this.props.match.params.id);\r\n        console.log('current state:  ' + this.state.Breed + \"  \" + this.state.ImageUri);\r\n        // if(this.state.Breed.length === 0 || this.state.ImageUri.length === 0)\r\n        // // TODO SL add validation message\r\n        // return;\r\n\r\n        // console.log('submitting form. ');\r\n        // e.preventDefault();\r\n        const obj = {\r\n            Id: parseInt(this.props.match.params.id),\r\n            Breed: this.state.Breed,\r\n            ImageUri: this.state.ImageUri\r\n        };\r\n\r\n        // console.log('submitting obj. ' + obj);\r\n        axios.put('https://localhost:44382/api/dogsapi/', obj)\r\n            .then(res => console.log(res.data));\r\n\r\n        // this.setState({\r\n        //     Breed: '',\r\n        //     ImageUri: ''\r\n        // });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Dog Put</h2>\r\n                <form action=\"/myform\" method=\"post\" onSubmit={this.handleSubmit} noValidate>\r\n                    {\r\n                        <div>\r\n                            <p>\r\n                                Breed: <br />\r\n                                <input type=\"text\" onChange={this.handleChange}\r\n                                    value={this.state.Breed} name=\"Breed\" required />\r\n                            </p>\r\n                            <p>\r\n                                Image Uri: <br />\r\n                                <input value={this.state.ImageUri} onChange={this.handleChange} type=\"text\" name=\"ImageUri\" required />\r\n                            </p>\r\n                        </div>\r\n                    }\r\n                    <input type=\"submit\" value=\"Submit Form\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    // constructor(props) {\r\n    //     super(props)\r\n    // constructor() {\r\n    //     super()\r\n\r\n    //     this.state = {\r\n    //         id: '1',    //props.match.params.id,\r\n    //         Breed: '1',\r\n    //         ImageUri: '1'\r\n\r\n    //     }\r\n\r\n    //     //this.props = props;\r\n    //     // this.handleBlur = this.handleBlur.bind(this);\r\n    //     //this.handleOnChange = this.handleOnChange.bind(this);\r\n    //     this.componentDidMount = this.componentDidMount(this);\r\n    //     // this.getData = this.getData(this);\r\n    // }\r\n\r\n    // getData() {\r\n\r\n    //     console.log(\"getData\");\r\n    //     this.setState({\r\n    //         breed: '11',// res.data.breed,\r\n    //         imageUri: '22'// res.data.imageUri,\r\n    //     });\r\n    //     // axios.get('http://localhost:44382/api/dogsapi/' + this.props.match.params.id)\r\n    //     //    // .then(res => { console.log(\"ge222t\"); })\r\n    //     //     .then(res => {\r\n\r\n    //     //         this.setState({\r\n    //     //             breed: '11',// res.data.breed,\r\n    //     //             imageUri: '22'// res.data.imageUri,\r\n    //     //         });\r\n\r\n    //     //     })\r\n    //     //     .catch((error) => {\r\n    //     //         console.log(error);\r\n    //     //     })\r\n    //    // console.log(this.state);\r\n    // }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     let newName = 'Obaseki Nosa'\r\n    //     // Don't forget to compare states\r\n    //     if (prevState && prevState.name !== newName) {\r\n    //       this.setState({breed: newName});\r\n    //     }\r\n    //     console.log('componentDidUpdate  :  ' + this.state);\r\n    //   }\r\n\r\n    // componentDidMount() {\r\n    //     // this.getData();\r\n    //     console.log(\" componentDidMount  \" + this.state.Breed);\r\n    //     this.setState({\r\n    //         Breed: '1221',// res.data.breed,\r\n    //         ImageUri: '2332'// res.data.imageUri,\r\n    //     });\r\n    //     console.log(\" componentDidMount  \" + this.state.Breed);\r\n    //     // props.match.params.id\r\n\r\n    //     //\r\n    //     //axios.get('https://localhost:44382/api/dogsapi/')\r\n    //     // https://localhost:44382/api/dogsapi/1\r\n    //     // http://localhost:44382/api/dogsapi/1\r\n\r\n\r\n    //     // console.log(\"get\");\r\n    //     // axios.get('http://localhost:44382/api/dogsapi/' + this.props.match.params.id)\r\n    //     //     .then(res => { console.log(\"ge222t\"); })\r\n    //     //     .then(res => {\r\n\r\n    //     //         this.setState({\r\n    //     //             breed: '11',// res.data.breed,\r\n    //     //             imageUri: '22'// res.data.imageUri,\r\n    //     //         });\r\n\r\n    //     //     })\r\n    //     //     .catch((error) => {\r\n    //     //         console.log(error);\r\n    //     //     })\r\n    //     // console.log(this.state);\r\n\r\n    // }\r\n\r\n    // handleOnChange(event) {\r\n    //     const { name, value } = event.target\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     })\r\n    // }\r\n    // handleBlur(event) {\r\n    //     const { name, value } = event.target\r\n    //     this.setState({\r\n    //         [name]: value\r\n    //     })\r\n    // }\r\n\r\n    // handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     if (this.state.breed.length === 0 || this.state.imageUri.length === 0)\r\n    //         // TODO SL add validation message\r\n    //         return;\r\n\r\n    //     console.log('submitting form. ');\r\n    //     e.preventDefault();\r\n    //     const dog = {\r\n    //         id: this.state.id,\r\n    //         breed: this.state.breed,\r\n    //         imageUri: this.state.imageUri\r\n    //     };\r\n\r\n    //     console.log('submitting obj. ' + dog);\r\n\r\n    //     const obj = {\r\n    //         breed: this.state.breed,\r\n    //         imageUri: this.state.imageUri\r\n    //     };\r\n\r\n    //     axios.put('https://localhost:44382/api/dogsapi/', obj)\r\n    //         .then(res => console.log(res.data));\r\n    // }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div>\r\n    //             <h2>Dog Put</h2>\r\n    //             <form action=\"/myform\" method=\"post\" onSubmit={this.handleSubmit} noValidate>\r\n    //                 {\r\n    //                     <div>\r\n    //                         <p>\r\n    //                             Breed: <br />\r\n    //                             {/* value={this.state.data.breed} onChange={this.handleOnChange}  */}\r\n    //                             <input type=\"text\" name=\"breed\" onBlur={this.handleBlur} required />\r\n    //                         </p>\r\n    //                         {/* <p>\r\n    //                             Image Uri: <br />\r\n    //                             <input type=\"text\" onChange={this.handleOnChange} name=\"imageUri\" onBlur={this.handleBlur} required />\r\n    //                         </p> */}\r\n    //                     </div>\r\n    //                 }\r\n    //                 <input type=\"submit\" value=\"Submit Form\" />\r\n    //             </form>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n}\r\nexport default DogPut;","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { Image } from 'react-bootstrap'\r\nimport \"../styles/DogList.css\";\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction Vote() {\r\n    // const [page, setPage] = useState(1);\r\n    const [commitHistory, setCommitHistory] = useState([]);\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // const loadMoreCommit = () => {\r\n    //     setPage(page + 1);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        // axios.get('http://localhost:4000/business')\r\n        axios.get('https://localhost:44382/api/dogsapi/')\r\n\r\n            .then(response => {\r\n                console.log(\"dogsapi data \" + response.data);\r\n                setCommitHistory(response.data);\r\n                // this.setState({ business: response.data });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n\r\n    // renderTableData()  {\r\n    //     return this.state.dogs.map((dog, index) => {\r\n    //         const { id, breed, imageUri } = dog\r\n    //         return (\r\n    //             <tr key={id}>\r\n    //                 <td>{id}</td>\r\n    //                 <td>{breed}</td>\r\n    //                 <td>{imageUri}</td>\r\n    //                 <td>\r\n    //                     <Link className=\"edit-link\" to={\"/dogput/\" + id}>\r\n    //                         Edit\r\n    //                     </Link>\r\n    //                 </td>\r\n    //                 <td>\r\n    //                     <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Delete the item?')) { this.handleDelete(id) }; }}>Delete</button>\r\n    //                 </td>\r\n    //             </tr>\r\n    //         )\r\n    //     })\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h1> Items </h1>\r\n\r\n            <Table striped bordered hover>\r\n                {/* <thead>\r\n                    <tr>\r\n                        <th>Item</th>\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody> \r\n                    <tr>\r\n                    {commitHistory.map((c, index) => (\r\n                        <td>\r\n                            {/* {index} */}\r\n                        <br /> {c.breed} <br /> <Image id=\"dogImage\" className='dogListImage' src={c.imageUri} /></td>\r\n                    ))}\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n//const rootElement = document.getElementById(\"root\");\r\n// export default ReactDOM.render(<Vote />, rootElement);\r\nexport default Vote;","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { Link } from 'react-router-dom';\r\n// import '../style.css';\r\nexport class DogListClassComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            dogs: []\r\n        };\r\n\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.getList = this.getList.bind(this)\r\n    }\r\n\r\n    getList() {\r\n        axios.get('https://localhost:44382/api/dogsapi/')\r\n        .then(res => {\r\n            this.setState({\r\n                dogs: res.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    componentDidMount() {\r\n       this.getList();\r\n    }\r\n\r\n    renderTableData() {\r\n        return this.state.dogs.map((dog, index) => {\r\n            const { id, breed, imageUri } = dog\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{breed}</td>\r\n                    <td>{imageUri}</td>\r\n                    <td>\r\n                        <Link className=\"edit-link\" to={\"/dogput/\" + id}>\r\n                            Edit\r\n                        </Link>\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn btn-danger\" onClick={() => { if (window.confirm('Delete the item?')) { this.handleDelete(id) }; }}>Delete</button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        axios.delete('https://localhost:44382/api/dogsapi/' + id)\r\n            .then(res => {\r\n                this.getList();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-wrapper\">\r\n                <p>Items List</p>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Breed</th>\r\n                            <th>ImageUri</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>);\r\n    }\r\n}\r\nexport default DogListClassComponent;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// import DogList from './Components/DogList';\r\nimport DogPost from './Components/DogPost';\r\nimport DogPut from './Components/DogPut';\r\nimport Vote from './Components/Vote';\r\nimport DogListClassComponent from './Components/DogListClassComponent';\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route path=\"/doglist\" component={DogListClassComponent} />\r\n    <Route path=\"/dogpost\" component={DogPost} />\r\n    <Route path=\"/dogput/:id\" component={DogPut} />\r\n    <Route exact path=\"/\" component={Vote} />\r\n  </Switch>\r\n\r\n);\r\nexport default Routes;","import React from 'react';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n// import Menu from '../src/Components/Menu'\r\nimport './App.css';\r\n// import Vote from '../src/Components/Vote';\r\n// import DogList from '../src/Components/DogList';\r\n// import DogPost from '../src/Components/DogPost';\r\n// import DogListClassComponent from './Components/DogListClassComponent';\r\n// import DogPut from './Components/DogPut';\r\nimport Navbar from './Navbar'\r\nimport Routes from './Routes'\r\n//import { red } from '@material-ui/core/colors';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Routes />\r\n      <header className=\"App-header\">\r\n        {/* <Vote /> */}\r\n        {/* <DogPost /> */}\r\n\r\n{/* \r\n        <Router>\r\n          <div>\r\n            <nav>\r\n              <ul style={{display:\"inline-block\"}}> \r\n                <li style={{ listStyleType:\"none\", display:\"inline-block\"  }}>\r\n                  <Link to=\"/puttest\">Put Test</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/\">Vote</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/dogpost\">Dog Post</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/doglist\">Dog 2 List</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n\r\n            <Switch>\r\n              <Route path=\"/puttest\">\r\n                <DogPut />\r\n              </Route>\r\n              <Route path=\"/dogpost\">\r\n                <DogPost />\r\n              </Route>\r\n              <Route path=\"/doglist\">\r\n                <DogListClassComponent />\r\n              </Route>\r\n              {/* <Route path=\"/dogput:id\">\r\n                <DogPut />\r\n              </Route> }\r\n              <Route path=\"/dogput/:id\" component={DogPut} />\r\n              <Route path=\"/\">\r\n                <Vote />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router> */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'),\r\n  );\r\n  \r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}